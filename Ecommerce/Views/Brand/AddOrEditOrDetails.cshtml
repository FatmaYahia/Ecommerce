
@using Ecommerce.Models
@model Brand
<style>
    .error {
        color: red
    }
</style>
@using (Html.BeginForm("AddOrEditOrDetails", "NewNewBrand", FormMethod.Post, new { enctype = "multipart/form-data", id = "MyForm" }))
{
    @Html.HiddenFor(model => model.ID)
    <div class="form-group row">
        @Html.LabelFor(model => model.Name, new { @class = "col-md-3" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-6 Name" })

    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Description, new { @class = "col-md-3" })
        @Html.TextAreaFor(model => model.Description, new { @class = "form-control col-md-6" })
    </div>
    if (ViewBag.Trigger == "edit" || ViewBag.Trigger == "details")
    {
        <div class="form-group row">
            <img src="/Attachment/Brands/@Model.Image" width="550" height="250" />

        </div>
    }
    if (ViewBag.trigger == "details")
    {
        <script>
            var inputs = document.getElementsByClassName("Name");
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = true;
            }
            var textareas = document.getElementsByTagName("textarea");
            for (var i = 0; i < textareas.length; i++) {
                textareas[i].disabled = true;
            }
            var selects = document.getElementsByTagName("select");
            for (var i = 0; i < selects.length; i++) {
                selects[i].disabled = true;
            }
        </script>
    }
    else
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.Image, new { @class = "col-md-3" })
            @if (ViewBag.trigger == "edit")
            {
                <input type="file" name="image" />
            }
            else
            {
                <input type="file" name="Image" />

            }

        </div>
        <div class="form-group row">
            <input type="submit" value="submit" class="btn btn-primary" />
            @if (Model.ID == 0)
            {
            <input type="reset" value="reset" class="btn btn-warning" />
            }
        </div>
    }

}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $("#MyForm").validate({
        rules: {
            Name: "required",
            Name: {
                required: true,
                minlength: 2
            },
            Image: "required",
            Image: {
                required: true,
            }
        },
        messages: {

            Name: {
                required: " this field is required",
                minlength: " Your Name must consist of at least 2 characters"
            },
            Image: {
                required: " You must add an image",
            },

        },
        submitHandler: function (form) {
            const formData = new FormData($("#MyForm")[0]);
            PostForm(formData);
        }
    });
    var PostForm = function (formData) {
        $.ajax(
            {
                url: "/Brand/AddOrEditOrDetails",
                method: "POST",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    $("#modal").modal("hide");
                    if (data.done) {
                        alert(data.message);
                        datatableFunction();
                    } else {
                        alert(data.message);
                    }
                }
            });
    }
</script>
